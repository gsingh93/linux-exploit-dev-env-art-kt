ART_KT_DIR := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))/art-kernel-toolkit

ART_KT_MAKE := \
  PATH=$(CLANG_DIR)/bin:$(PATH) \
  KERNEL_SRC=$(LINUX_OUT) \
  $(MAKE) -C $(ART_KT_DIR) \
  CC=clang \
  LLVM=1 LLVM_IAS=1 \
  ARCH=$(ARCH) \
  CROSS_COMPILE=$(TARGET)-

.PHONY: art-kt_help
art-kt_help:
	@echo '$(GREEN)Environment Variables:$(NC)'
	@echo '   ART_KT_TEST_NO_QUIT              - Set to 1 to leave QEMU running after the test script has completed (default: 0)'
	@echo ''
	@echo '$(GREEN)Targets:$(NC)'
	@echo '   art-kt                           - Build art-kernel-toolkit.ko, install the module into the kernel'\''s modules directory, and copy the module to the shared directory'
	@echo '   art-kt_help                      - Show this help message'
	@echo '   art-kt_clean                     - Clean the art-kernel-toolkit build'
	@echo '   art-kt_test                      - Run the art-kernel-toolkit test script'

.PHONY: art-kt
art-kt: | $(SHARED_DIR) $(CLANG_DIR)
	$(ART_KT_MAKE) INSTALL_MOD_PATH=$(LINUX_MODULES_INSTALL_PATH) modules_install
	cp $(ART_KT_DIR)/art-kernel-toolkit.ko $(SHARED_DIR)

.PHONY: art-kt_clean
art-kt_clean:
	$(ART_KT_MAKE) clean

ART_KT_TEST_NO_QUIT ?= 0

define ART_KT_TEST_SCRIPT
#!/bin/sh
modprobe art-kernel-toolkit

if grep "art-kt-qemu-test" /proc/cmdline > /dev/null 2>&1 ; then
  /shared/test.sh

  if ! grep "art-kt-qemu-test-no-quit" /proc/cmdline > /dev/null 2>&1 ; then
    poweroff
  fi
fi

endef
export ART_KT_TEST_SCRIPT

.PHONY: art-kt_test
art-kt_test: art-kt
	cp $(ART_KT_DIR)/test.sh $(SHARED_DIR)

	-mv $(SHARED_DIR)/init.sh $(SHARED_DIR)/init.sh.bak
	echo "$$ART_KT_TEST_SCRIPT" > $(SHARED_DIR)/init.sh
	chmod +x $(SHARED_DIR)/init.sh

ifeq ($(ART_KT_TEST_NO_QUIT),1)
	QEMU_EXTRA_KERNEL_CMDLINE=art-kt-qemu-test-no-quit $(MAKE) run
else
	QEMU_EXTRA_KERNEL_CMDLINE=art-kt-qemu-test $(MAKE) run
endif
